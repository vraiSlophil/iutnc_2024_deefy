-- drop database if exists deefy;

-- DROP DATABASE deefy;

CREATE DATABASE deefy;

CREATE TABLE deefy.users
(
    user_id       NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    user_name     VARCHAR2(255)  NOT NULL UNIQUE,
    user_email    VARCHAR2(255)  NOT NULL UNIQUE,
    user_password VARCHAR2(255)  NOT NULL,
    permission_id NUMBER DEFAULT 1 NOT NULL
);

CREATE TABLE deefy.playlists
(
    playlist_id   NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    playlist_name VARCHAR2(255) NOT NULL
);

CREATE TABLE deefy.user_playlists
(
    user_id     NUMBER,
    playlist_id NUMBER,
    PRIMARY KEY (user_id, playlist_id)
);

CREATE TABLE deefy.podcast_tracks
(
    track_id       NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    track_title    VARCHAR2(255) NOT NULL,
    track_genre    VARCHAR2(255),
    track_duration NUMBER,
    track_year     DATE,
    track_filename VARCHAR2(255),
    track_artist   VARCHAR2(255)
);

CREATE TABLE deefy.playlist_tracks
(
    playlist_id NUMBER,
    track_id    NUMBER,
    PRIMARY KEY (playlist_id, track_id)
);

CREATE TABLE deefy.permissions
(
    permission_id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    role_name     VARCHAR2(255) NOT NULL UNIQUE,
    role_level    NUMBER        NOT NULL
);

CREATE TABLE deefy.tokens
(
    token_id   NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    user_id    NUMBER UNIQUE   NOT NULL,
    token      VARCHAR2(255) NOT NULL,
    created_at TIMESTAMP     NOT NULL DEFAULT CURRENT_TIMESTAMP,
    expires_at TIMESTAMP     NOT NULL
);

ALTER TABLE deefy.users
    ADD CONSTRAINT fk_permission_id FOREIGN KEY (permission_id) REFERENCES deefy.permissions (permission_id);

ALTER TABLE deefy.user_playlists
    ADD CONSTRAINT fk_user_id FOREIGN KEY (user_id) REFERENCES deefy.users (user_id),
    ADD CONSTRAINT fk_playlist_id FOREIGN KEY (playlist_id) REFERENCES deefy.playlists (playlist_id);

ALTER TABLE deefy.playlist_tracks
    ADD CONSTRAINT fk_playlist_id FOREIGN KEY (playlist_id) REFERENCES deefy.playlists (playlist_id),
    ADD CONSTRAINT fk_track_id FOREIGN KEY (track_id) REFERENCES deefy.podcast_tracks (track_id);

ALTER TABLE deefy.tokens
    ADD CONSTRAINT fk_user_id FOREIGN KEY (user_id) REFERENCES deefy.users (user_id);

INSERT INTO deefy.permissions (role_name, role_level)
VALUES ('USER', 0);
INSERT INTO deefy.permissions (role_name, role_level)
VALUES ('MOD', 10);
INSERT INTO deefy.permissions (role_name, role_level)
VALUES ('ADMIN', 100);

insert into deefy.users (user_id, user_name, user_email, user_password, permission_id)
values  (2, 'ADMINISTRATEUR', 'ADMINISTRATEUR@example.com', '$2y$10$KEtiW6iIEIzs0ogCBuQX/eJTpLluCrpBPlWumszFTWDfG1IqbRoSC', 3);